name: Fail-Safe JSON Repair

on:
  push:
    branches:
      - main

jobs:
  repair-json:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      # Repository klonen
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Python Setup
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      # Abhängigkeiten installieren
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install json5 PyGithub tabulate

      # JSON reparieren
      - name: Repair JSON files
        run: |
          python scripts/repair_json.py

      # Git Config (für Commit & Push)
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      # Änderungen committen und Branch erstellen
      - name: Commit and push changes
        run: |
          branch_name="fail-safe-json-repair-dashboard"
          git checkout -b $branch_name || git checkout $branch_name
          git add .
          git commit -m "Fail-Safe JSON Repair applied" || echo "No changes to commit"
          git push --set-upstream origin $branch_name --force

      # Optional: Pull Request erstellen
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          branch: fail-safe-json-repair-dashboard
          base: main
          title: "Fail-Safe JSON Repair + Dashboard"
          body: "Automated fail-safe repair of JSON files with block-level dashboard."
